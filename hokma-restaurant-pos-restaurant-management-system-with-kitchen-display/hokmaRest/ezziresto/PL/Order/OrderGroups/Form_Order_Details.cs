using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Order.OrderGroups
{
    public partial class Form_Order_Details : DevExpress.XtraEditors.XtraForm
    {
        BL.Order.Order order = new BL.Order.Order();
        DataTable dt = new DataTable();
        int order_id = 20;

        public Form_Order_Details()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource
            sqlDataSourceCustomer.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource
            sqlDataSourceBranch.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource
            sqlDataSourceDepartment.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource
            sqlDataSourceTables.Fill();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource
            sqlDataSourceWaiter.Fill();
        }

        private void Form_Settle_Order_Load(object sender, EventArgs e)
        {
            txtReturnAmount.Visible = false;
            if (dt.Columns.Count == 0)
            {
                dt.Columns.Add("ID", typeof(string));
                dt.Columns.Add("Name", typeof(string));
                dt.Columns.Add("Price", typeof(string));
                dt.Columns.Add("Qty", typeof(int));
                dt.Columns.Add("Total", typeof(string));
            }
            order_details();
            loadItems();
        }

        public void setOrderId(int order_id)
        {
            this.order_id = order_id;
        }

        private void loadItems()
        {
            DataTable items = order.get_food_orders_by_id(this.order_id);

            for(int i = 0;i< items.Rows.Count; i++)
            {
                DataRow NewRow = dt.NewRow();
                NewRow[0] = items.Rows[i]["food_item_id"].ToString();
                NewRow[1] = items.Rows[i]["food_item"].ToString();
                NewRow[2] = items.Rows[i]["price"].ToString();
                NewRow[3] = items.Rows[i]["quantity"].ToString(); 
                NewRow[4] = Convert.ToInt32(items.Rows[i]["quantity"].ToString()) * Convert.ToDecimal(items.Rows[i]["price"].ToString());
                dt.Rows.Add(NewRow);
            }

            gridControlItems.DataSource = dt;
        }

        private void order_details()
        {
            DataTable details = order.get_order_group_by_id(this.order_id);

            if (details.Rows.Count > 0)
            {

                if(details.Rows[0]["table_name"].ToString() == "")
                {
                    txtTable.Text = "Not Set";
                } else
                {
                    txtTable.Text = details.Rows[0]["table_name"].ToString();
                }
                
                if (details.Rows[0]["user_name"].ToString() == "")
                {
                    txtReceivedby.Text = "Not Set";
                }
                else
                {
                    txtReceivedby.Text = details.Rows[0]["user_name"].ToString();
                }

                if (details.Rows[0]["customer_name"].ToString() == "")
                {
                    txtCustomer.Text = "Not Set";
                }
                else
                {
                    txtCustomer.Text = details.Rows[0]["customer_name"].ToString();
                }
              
                if (details.Rows[0]["waiter_name"].ToString() == "")
                {
                    txtWaiter.Text = "Not Set";
                }
                else
                {
                    txtWaiter.Text = details.Rows[0]["waiter_name"].ToString();
                }

                txtCGST.Text = details.Rows[0]["cgst"].ToString();
                txtBranch.Text = details.Rows[0]["branch_name"].ToString();
                txtTotalBill.Text = details.Rows[0]["bill_distribution"].ToString();
                txtSubtotal.Text = details.Rows[0]["total_payable"].ToString();
                txtSGST.Text = details.Rows[0]["sgst"].ToString();
                txtServiceCharge.Text = details.Rows[0]["service_charge"].ToString();
                txtPaidAmount.Text = details.Rows[0]["paid_amount"].ToString();
                txtDueAmount.Text = details.Rows[0]["total_payable"].ToString(); // To check...
                txtDiscount.Text = details.Rows[0]["discount"].ToString();
                txtDepartmentCommission.Text = details.Rows[0]["dept_commission"].ToString();
                txtDepartment.Text = details.Rows[0]["dept_tag_name"].ToString();
                txtReturnAmount.Text = details.Rows[0]["return_amount"].ToString();
                txtAmount.Text = details.Rows[0]["paid_amount"].ToString();

                txtTotalBill.ReadOnly = true;
                txtAmount.ReadOnly = true;
                txtReturnAmount.ReadOnly = true;
                txtTable.ReadOnly = true;
                txtSubtotal.ReadOnly = true;
                txtSGST.ReadOnly = true;
                txtServiceCharge.ReadOnly = true;
                txtReceivedby.ReadOnly = true;
                txtPaidAmount.ReadOnly = true;
                txtDueAmount.ReadOnly = true;
                txtDiscount.ReadOnly = true;
                txtDepartmentCommission.ReadOnly = true;
                txtDepartment.ReadOnly = true;
                txtCustomer.ReadOnly = true;
                txtCGST.ReadOnly = true;
                txtBranch.ReadOnly = true;
                txtWaiter.ReadOnly = true;
            }
        }

        private void txtAmount_EditValueChanged(object sender, EventArgs e)
        {
            /*
            txtReturnAmount.Visible = false;
            if (txtAmount.EditValue != null)
            {
                if( Convert.ToDecimal(txtAmount.EditValue.ToString()) > Convert.ToDecimal(txtDueAmount.Text) )
                {
                    txtReturnAmount.Text = (Convert.ToDecimal(txtAmount.EditValue.ToString()) - Convert.ToDecimal(txtDueAmount.Text)).ToString();
                    txtReturnAmount.Visible = true;
                } else
                {
                    txtReturnAmount.Text = "0";
                }
            }
            */
        }
    }
}