using DevExpress.Data;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Stock.SupplierHistory
{
    public partial class Form_Supplier_History : DevExpress.XtraEditors.XtraForm
    {
        BL.FoodPurchase.FoodPurchase food = new BL.FoodPurchase.FoodPurchase();
        BL.IngredientPurchase.IngredientPurchase ingredient = new BL.IngredientPurchase.IngredientPurchase();
        public Form_Supplier_History()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceIngredients.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceFood.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceSupplier.FillAsync();
        }

        private void supplierID_EditValueChanged(object sender, EventArgs e)
        {
            gridControlFood.DataSource = food.get_food_purchases_by_supplier(Convert.ToInt32(supplierID.EditValue));
            gridControlIngredients.DataSource = ingredient.get_ingredient_purchase_by_supplier(Convert.ToInt32(supplierID.EditValue));
        }

        private void btnReset_Click(object sender, EventArgs e)
        {
            supplierID.Clear();
            gridControlFood.DataSource = food.get_food_purchases();
            gridControlIngredients.DataSource = ingredient.get_ingredient_purchases();
            textPeriodeDate.EditValue = "";
            startDate.Text = DateTime.Now.ToString();
            endDate.Text = DateTime.Now.ToString();
            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\Wrong.wav");
                simpleSound.Play();
            }
        }

        private void textPeriodeDate_EditValueChanged(object sender, EventArgs e)
        {

            if (textPeriodeDate.EditValue.ToString() == "All")
            {
                gridViewFood.ActiveFilterString = null;
                gridViewIngredients.ActiveFilterString = null;
            }
            else if (textPeriodeDate.EditValue.ToString() == "To Day")
            {
                gridViewFood.ActiveFilterString = string.Format("IsOutlookIntervalToday([created_at])");
                gridViewIngredients.ActiveFilterString = string.Format("IsOutlookIntervalToday([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "This Week")
            {
                gridViewFood.ActiveFilterString = string.Format("IsThisWeek([created_at])");
                gridViewIngredients.ActiveFilterString = string.Format("IsThisWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Last Week")
            {
                gridViewFood.ActiveFilterString = string.Format("IsOutlookIntervalLastWeek([created_at])");
                gridViewIngredients.ActiveFilterString = string.Format("IsOutlookIntervalLastWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Newest")
            {
                gridViewFood.Columns["id"].SortOrder = ColumnSortOrder.Ascending;
                gridViewIngredients.Columns["id"].SortOrder = ColumnSortOrder.Ascending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Oldest")
            {
                gridViewFood.Columns["id"].SortOrder = ColumnSortOrder.Descending;
                gridViewIngredients.Columns["id"].SortOrder = ColumnSortOrder.Descending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Between the dates")
            {
                startDate.Enabled = true;
                endDate.Enabled = true;
                gridViewFood.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
                gridViewIngredients.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
            }
        }

        private void Form_Supplier_History_Load(object sender, EventArgs e)
        {

        }
    }
}