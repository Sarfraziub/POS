using DevExpress.Data;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Stock.IngredientPurchase
{
    public partial class Form_Ingredient_Purchases_List : DevExpress.XtraEditors.XtraForm
    {
        BL.IngredientPurchase.IngredientPurchase ingredient_purchase = new BL.IngredientPurchase.IngredientPurchase();
        DataTable tbl = new DataTable();
        int supp_id = 0;
        bool filter = true;
        decimal total_price = 0;

        public Form_Ingredient_Purchases_List()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourcePurchases.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceSupplier.FillAsync();
            tbl = ingredient_purchase.get_ingredient_purchases();
            calculeTotalPrice();
            txtOrderSelectedRow.Text = "00000000001";
            txtTotalSelectedRow.Text = "00000000 DA";
        }

        public void setSuppID(int supp_id)
        {
            this.supp_id = supp_id;
        }
        public void calculeTotalPrice()
        {
            if (tbl.Rows.Count > 0)
            {
                for (int i = 0; i < tbl.Rows.Count; i++)
                {
                    total_price += Convert.ToDecimal(tbl.Rows[i]["total_bill"]);
                }
                txtTotal.Text = total_price.ToString() + " DA";
            }
            else
            {
                txtTotal.Text = "00000 DA";
            }
        }

        public void asyncData()
        {
            sqlDataSourcePurchases.FillAsync();
        }

        private void btnAdd_Click_1(object sender, EventArgs e)
        {
            Form_Add_Ingredient_Purchases form_ingredient_purchases = new Form_Add_Ingredient_Purchases();
            form_ingredient_purchases.setObject(this);
            form_ingredient_purchases.ShowDialog();
        }

        private void gridViewPurchases_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            object orderID = this.gridViewPurchases.GetRowCellValue(this.gridViewPurchases.FocusedRowHandle, "id");
            object orderTotal = this.gridViewPurchases.GetRowCellValue(this.gridViewPurchases.FocusedRowHandle, "total_bill");
            object suppId = this.gridViewPurchases.GetRowCellValue(this.gridViewPurchases.FocusedRowHandle, "id");
            this.supp_id = Convert.ToInt32(suppId);
            txtOrderSelectedRow.Text = orderID.ToString();
            txtTotalSelectedRow.Text = orderTotal.ToString() + " DA";
            btnEdit.Enabled = true;
            btnDelete.Enabled = true;
        }

        private void gridControlPurchases_DoubleClick(object sender, EventArgs e)
        {
            object value = this.gridViewPurchases.GetRowCellValue(this.gridViewPurchases.FocusedRowHandle, "id");
            Form_Edit_Ingredient_Purchases form_ingredient_purchases = new Form_Edit_Ingredient_Purchases();
            form_ingredient_purchases.setOrderID(Convert.ToInt32(value));
            form_ingredient_purchases.setID(Convert.ToInt32(value));
            form_ingredient_purchases.setObject(this);
            form_ingredient_purchases.ShowDialog();
        }

        private void btnEdit_Click_1(object sender, EventArgs e)
        {
            if (this.supp_id != 0)
            {
                Form_Edit_Ingredient_Purchases form_ingredient_purchases = new Form_Edit_Ingredient_Purchases();
                form_ingredient_purchases.setID(this.supp_id);
                form_ingredient_purchases.setObject(this);
                form_ingredient_purchases.ShowDialog();
            }
        }

        private void Form_Ingredient_Purchases_List_Load(object sender, EventArgs e)
        {
            btnEdit.Enabled = false;
            btnDelete.Enabled = false;
        }

        private void btnDelete_Click_1(object sender, EventArgs e)
        {
            if (this.supp_id != 0)
            {
                DialogResult dialogResult = MessageBox.Show("Are You Sure,You Whant Delete This Item ?", "Delete This Item", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    ingredient_purchase.delete(this.supp_id);
                    this.asyncData();
                    btnEdit.Enabled = false;
                    btnDelete.Enabled = false;
                    if (Properties.Settings.Default.sound == "yes")
                    {
                        SoundPlayer simpleSound = new SoundPlayer(@"c:\Deleted.wav");
                        simpleSound.Play();
                    }
                }
                else if (dialogResult == DialogResult.No)
                {
                    // do something
                }
            }
        }

        private void textPeriodeDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (textPeriodeDate.EditValue.ToString() == "All")
            {
                gridViewPurchases.ActiveFilterString = null;
            }
            else if (textPeriodeDate.EditValue.ToString() == "To Day")
            {
                gridViewPurchases.ActiveFilterString = string.Format("IsOutlookIntervalToday([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "This Week")
            {
                gridViewPurchases.ActiveFilterString = string.Format("IsThisWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Last Week")
            {
                gridViewPurchases.ActiveFilterString = string.Format("IsOutlookIntervalLastWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Newest")
            {
                gridViewPurchases.Columns["id"].SortOrder = ColumnSortOrder.Ascending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Oldest")
            {
                gridViewPurchases.Columns["id"].SortOrder = ColumnSortOrder.Descending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Between the dates")
            {
                startDate.Enabled = true;
                endDate.Enabled = true;
                gridViewPurchases.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
            }
        }

        private void btnReset_Click_1(object sender, EventArgs e)
        {
            total_price = 0;
            this.filter = false;
            tbl = ingredient_purchase.get_ingredient_purchases();
            calculeTotalPrice();
            gridControlPurchases.DataSource = tbl;
            textPeriodeDate.EditValue = "";
            startDate.Text = DateTime.Now.ToString();
            endDate.Text = DateTime.Now.ToString();
            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\Wrong.wav");
                simpleSound.Play();
            }
        }

        private void startDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (endDate.EditValue != null & this.filter)
                gridViewPurchases.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }

        private void endDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (startDate.EditValue != null & this.filter)
                gridViewPurchases.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }
        private void supplierID_EditValueChanged(object sender, EventArgs e)
        {
            if (supplierID.EditValue != null)
            {
                tbl = ingredient_purchase.get_ingredient_purchase_by_supplier(Convert.ToInt32(supplierID.EditValue.ToString()));
                calculeTotalPrice();
                gridControlPurchases.DataSource = tbl;
            }
        }
    }
}