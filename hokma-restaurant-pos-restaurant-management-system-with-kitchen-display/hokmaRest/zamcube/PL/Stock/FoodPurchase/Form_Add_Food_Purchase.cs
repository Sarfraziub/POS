using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Stock.FoodPurchase
{
    public partial class Form_Add_Food_Purchase : DevExpress.XtraEditors.XtraForm
    {
        BL.FoodPurchase.FoodPurchase food_purchase = new BL.FoodPurchase.FoodPurchase();
        BL.FoodItem.FoodItem food_itemm = new BL.FoodItem.FoodItem();
        BL.TempFoodPurchase.TempFoodPurchase temp_food_purchase = new BL.TempFoodPurchase.TempFoodPurchase();
        Form_Food_Purchase_List form_food_purchases_list = null;
        DataTable dt = new DataTable();
        int current_product = 0;
        int order_id = 0;
        decimal total_price = 0;

        public Form_Add_Food_Purchase()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceBranch.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceSupplier.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourcePaymentType.FillAsync();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceFood.FillAsync();
        }

        private void Form_Add_Food_Purchase_Load(object sender, EventArgs e)
        {
            totalPriceCurency.Text = Properties.Settings.Default.currency;

            temp_food_purchase.delete();

            btnLeft.Enabled = false;
            btnRight.Enabled = false;
            btnPrint.Enabled = false;
            
            txtQty.Enabled = false;
            txtPrice.Enabled = false;
            txtDiscount.Enabled = false;
            
            if (dt.Columns.Count == 0)
            {
                dt.Columns.Add("Food ID", typeof(string));
                dt.Columns.Add("Product Name", typeof(string));
                dt.Columns.Add("Product Qty", typeof(string));
                dt.Columns.Add("Sale Price", typeof(string));
                dt.Columns.Add("Discount", typeof(string));
                dt.Columns.Add("Total", typeof(string));
            }
        }

        public void setObject(Form_Food_Purchase_List form_food_purchases_list)
        {
            this.form_food_purchases_list = form_food_purchases_list;
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            temp_food_purchase.delete();

            if (dxValidationProvider1.Validate())
            {
                int food_purchase_id = food_purchase.add_food_purchase(Convert.ToInt32(txtBranch.EditValue), Convert.ToInt32(fieldNameSupplier.EditValue), Convert.ToInt32(txtPaymentType.EditValue), fieldNameSupplier.Text, 1, DateTime.Now, txtDesc.Text, txtPaymentType.Text, Convert.ToDecimal(txtFinalPrice.Text), Convert.ToDecimal(txtFinalPrice.Text), 0, DateTime.Now, DateTime.Now);
                temp_food_purchase.add_temp_food_purchase(Convert.ToInt32(txtBranch.EditValue), Convert.ToInt32(fieldNameSupplier.EditValue), Convert.ToInt32(txtPaymentType.EditValue), fieldNameSupplier.Text, 1, DateTime.Now, txtDesc.Text, txtPaymentType.Text, Convert.ToDecimal(txtFinalPrice.Text), Convert.ToDecimal(txtFinalPrice.Text), 0, DateTime.Now, DateTime.Now);

                for (int i = 0;i< dt.Rows.Count; i++)
                {
                    //MessageBox.Show(dt.Rows[i]["Food ID"].ToString() + " | " + dt.Rows[i]["Product Name"].ToString() + " | " + dt.Rows[i]["Product Qty"].ToString());
                    food_purchase.add_food_purchase_history(Convert.ToInt32(txtBranch.EditValue), food_purchase_id, Convert.ToInt32(dt.Rows[i]["Food ID"]), dt.Rows[i]["Product Name"].ToString(), Convert.ToInt32(dt.Rows[i]["Product Qty"]), 10, DateTime.Now, DateTime.Now); 
                    temp_food_purchase.add_temp_food_purchase_history(Convert.ToInt32(txtBranch.EditValue), food_purchase_id, Convert.ToInt32(dt.Rows[i]["Food ID"]), dt.Rows[i]["Product Name"].ToString(), Convert.ToInt32(dt.Rows[i]["Product Qty"]), Convert.ToDecimal(dt.Rows[i]["Sale Price"]), 0, DateTime.Now, DateTime.Now);
                }

                if (this.form_food_purchases_list != null)
                    this.form_food_purchases_list.asyncData();

                if (Properties.Settings.Default.sound == "yes")
                {
                    SoundPlayer simpleSound = new SoundPlayer(@"c:\Added.wav");
                    simpleSound.Play();
                }

                this.print();

                temp_food_purchase.delete();
            }
            else
            {
                if (Properties.Settings.Default.sound == "yes")
                {
                    SoundPlayer simpleSound = new SoundPlayer(@"c:\ValidationError.wav");
                    simpleSound.Play();
                }
            }
        }

        public void print()
        {
            DocumentsViewer.Form_DocViewer frmDoc = new DocumentsViewer.Form_DocViewer();
            frmDoc.printInvoiceFoodPurchase();
            frmDoc.ShowDialog();
        }

        private void txtProducts_EditValueChanged(object sender, EventArgs e)
        {
            if( txtProducts.EditValue != null )
            {
                DataTable data = food_itemm.get_food_item(Convert.ToInt32(txtProducts.EditValue.ToString()));

                txtPrice.Enabled = true;
                txtQty.Enabled = true;
                txtDiscount.Enabled = true;

                if (data.Rows.Count > 0)
                {
                    btnDeleteItem.Enabled = true;
                    txtPrice.ReadOnly = false;
                    txtQty.ReadOnly = false;
                    txtDiscount.ReadOnly = false;

                    DataRow NewRow = dt.NewRow();
                    NewRow[0] = data.Rows[0]["id"];
                    NewRow[1] = data.Rows[0]["name"];
                    NewRow[2] = 1; 
                    NewRow[3] = data.Rows[0]["price"];
                    NewRow[4] = 0;
                    NewRow[5] = data.Rows[0]["price"];

                    dt.Rows.Add(NewRow);
                    gridControlPurchase.DataSource = dt;

                    decimal total = Convert.ToDecimal(data.Rows[0]["price"]);
                    
                    total_price += Math.Round(total, 2);
                    txtFinalPrice.Text = total_price.ToString();
                    txtTotal.Text = total_price.ToString();
                    alertTotalPriceScreen.Text = total_price.ToString();
                    paidAmount.Text = total_price.ToString();

                    if (Properties.Settings.Default.sound == "yes")
                    {
                        SoundPlayer simpleSound = new SoundPlayer(@"c:\toggle.wav");
                        simpleSound.Play();
                    }
                }
            }
        }

        private void txtPrice_EditValueChanged(object sender, EventArgs e)
        {
            if (txtPrice.EditValue != null)
            {
                Decimal total = Convert.ToInt32(txtQty.EditValue.ToString()) * Convert.ToDecimal(txtPrice.EditValue.ToString());
                total_price = total_price - Convert.ToDecimal(dt.Rows[current_product]["Total"]);
                dt.Rows[current_product].SetField("Sale Price", txtPrice.Text);
                dt.Rows[current_product].SetField("Total", total);
                total_price += Math.Round(total, 2);
                txtFinalPrice.Text = total_price.ToString();
                dt.AcceptChanges();
                gridControlPurchase.DataSource = null;
                gridControlPurchase.DataSource = dt;

                this.calculeTotalPrice();
            }
        }

        private void txtQty_EditValueChanged(object sender, EventArgs e)
        {
            if (txtQty.EditValue != null)
            {
                Decimal total = Convert.ToInt32(txtQty.EditValue.ToString()) * Convert.ToDecimal(dt.Rows[current_product]["Sale Price"]);
                total_price = total_price - Convert.ToDecimal(dt.Rows[current_product]["Total"]);
                dt.Rows[current_product].SetField("Product Qty", txtQty.Text);
                dt.Rows[current_product].SetField("Total", total);
                total_price += Math.Round(total, 2);
                txtFinalPrice.Text = total_price.ToString();
                dt.AcceptChanges();
                gridControlPurchase.DataSource = null;
                gridControlPurchase.DataSource = dt;

                this.calculeTotalPrice();
            }
        }

        private void txtDiscount_EditValueChanged(object sender, EventArgs e)
        {
            if (txtDiscount.EditValue != null)
            {
                Decimal new_price = Convert.ToDecimal(txtPrice.EditValue.ToString()) - Convert.ToDecimal(txtDiscount.EditValue.ToString());

                if (new_price > 0)
                {
                    dt.Rows[current_product].SetField("Discount", txtDiscount.Text);
                    dt.Rows[current_product].SetField("Sale Price", new_price);
                    dt.AcceptChanges();
                    gridControlPurchase.DataSource = null;
                    gridControlPurchase.DataSource = dt;
                }
                else
                {
                    MessageBox.Show("Please enter the correct discount");
                    txtDiscount.Text = "0";
                    dt.Rows[current_product].SetField("Discount", "0");
                    dt.AcceptChanges();
                    gridControlPurchase.DataSource = null;
                    gridControlPurchase.DataSource = dt;
                }

                this.calculeTotalPrice();
            }
        }

        public void calculeTotalPrice()
        {
            decimal total_price = 0;

            for (int i = 0; i < dt.Rows.Count; i++)
            {
                total_price += Convert.ToDecimal(dt.Rows[i]["Sale Price"]) * Convert.ToDecimal(dt.Rows[i]["Product Qty"]);
            }

            alertTotalPriceScreen.Text = total_price.ToString();
        }

        private void btnDeleteItem_Click(object sender, EventArgs e)
        {
            if (current_product > 0)
            {
                DataRow dr = dt.Rows[current_product];

                total_price = total_price - Convert.ToDecimal(dt.Rows[current_product]["Total"]);
                txtFinalPrice.Text = total_price.ToString();
                alertTotalPriceScreen.Text = total_price.ToString();

                dr.Delete();
                dt.AcceptChanges();
                gridControlPurchase.DataSource = null;
                gridControlPurchase.DataSource = dt;
                current_product = gridViewPurchase.FocusedRowHandle;

                if (current_product < 0)
                {
                    btnDeleteItem.Enabled = false;
                    //txtPrice.ReadOnly = true;
                    //txtQty.ReadOnly = true;
                    //txtDiscount.ReadOnly = true;
                    dt.Clear();
                }

                if (Properties.Settings.Default.sound == "yes")
                {
                    SoundPlayer simpleSound = new SoundPlayer(@"c:\Deleted.wav");
                    simpleSound.Play();
                }
            } else
            {
                MessageBox.Show("There is no item to remove !");
            }
        }

        private void gridViewPurchase_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            current_product = gridViewPurchase.FocusedRowHandle;
            object Discount = this.gridViewPurchase.GetRowCellValue(this.gridViewPurchase.FocusedRowHandle, "Discount");
            object Price = this.gridViewPurchase.GetRowCellValue(this.gridViewPurchase.FocusedRowHandle, "Sale Price");
            object Qty = this.gridViewPurchase.GetRowCellValue(this.gridViewPurchase.FocusedRowHandle, "Product Qty");

            txtDiscount.Text = Discount.ToString();
            txtQty.Text = Price.ToString();
            txtPrice.Text = Qty.ToString();

            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\toggle.wav");
                simpleSound.Play();
            }
        }

        private void simpleButton7_Click(object sender, EventArgs e)
        {

        }

        private void btnAddProduct_Click(object sender, EventArgs e)
        {
            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\Added.wav");
                simpleSound.Play();
            }
            Food.Form_Add_New_Item food = new Food.Form_Add_New_Item();
            food.ShowDialog();
        }

        private void btnPrint_Click(object sender, EventArgs e)
        {

        }
    }
}