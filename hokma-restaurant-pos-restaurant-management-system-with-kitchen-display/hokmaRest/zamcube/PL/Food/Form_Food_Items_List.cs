using DevExpress.Data;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Food
{
    public partial class Form_Food_Items_List : DevExpress.XtraEditors.XtraForm
    {
        BL.FoodItem.FoodItem food_item = new BL.FoodItem.FoodItem();
        int food_item_id = 0;
        bool filter = true;

        public Form_Food_Items_List()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceFoodItem.FillAsync();
        }

        public void asyncData()
        {
            sqlDataSourceFoodItem.FillAsync();
        }

        private void btnAdd_Click_1(object sender, EventArgs e)
        {
            Form_Add_New_Item food_new_item = new Form_Add_New_Item();
            food_new_item.setObject(this);
            food_new_item.ShowDialog();
        }

        private void gridViewFoodItem_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            object value = this.gridViewFoodItem.GetRowCellValue(this.gridViewFoodItem.FocusedRowHandle, "id");
            this.food_item_id = Convert.ToInt32(value);
            btnEdit.Enabled = true;
            btnDelete.Enabled = true;
        }

        private void gridControlFoodItem_DoubleClick(object sender, EventArgs e)
        {
            object value = this.gridViewFoodItem.GetRowCellValue(this.gridViewFoodItem.FocusedRowHandle, "id");
            Form_Edit_Item food_item = new Form_Edit_Item();
            food_item.setID(Convert.ToInt32(value));
            food_item.setObject(this);
            food_item.ShowDialog();
        }

        private void btnEdit_Click_1(object sender, EventArgs e)
        {
            if (this.food_item_id != 0)
            {
                Form_Edit_Item food_edit_item = new Form_Edit_Item();
                food_edit_item.setID(this.food_item_id);
                food_edit_item.setObject(this);
                food_edit_item.ShowDialog();
            }
        }

        private void Form_Food_Group_Load(object sender, EventArgs e)
        {
            btnEdit.Enabled = false;
            btnDelete.Enabled = false;
        }

        private void btnDelete_Click_1(object sender, EventArgs e)
        {
            if (this.food_item_id != 0)
            {
                DialogResult dialogResult = MessageBox.Show("Are You Sure,You Whant Delete This Item ?", "Delete This Item", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    food_item.delete(this.food_item_id);
                    this.asyncData();
                    btnEdit.Enabled = false;
                    btnDelete.Enabled = false;

                    if (Properties.Settings.Default.sound == "yes")
                    {
                        SoundPlayer simpleSound = new SoundPlayer(@"c:\Deleted.wav");
                        simpleSound.Play();
                    }
                }
                else if (dialogResult == DialogResult.No)
                {
                    // do something
                }
            }
        }

        private void textPeriodeDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (textPeriodeDate.EditValue.ToString() == "All")
            {
                gridViewFoodItem.ActiveFilterString = null;
            }
            else if (textPeriodeDate.EditValue.ToString() == "To Day")
            {
                gridViewFoodItem.ActiveFilterString = string.Format("IsOutlookIntervalToday([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "This Week")
            {
                gridViewFoodItem.ActiveFilterString = string.Format("IsThisWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Last Week")
            {
                gridViewFoodItem.ActiveFilterString = string.Format("IsOutlookIntervalLastWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Newest")
            {
                gridViewFoodItem.Columns["id"].SortOrder = ColumnSortOrder.Ascending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Oldest")
            {
                gridViewFoodItem.Columns["id"].SortOrder = ColumnSortOrder.Descending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Between the dates")
            {
                startDate.Enabled = true;
                endDate.Enabled = true;
                gridViewFoodItem.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
            }
        }

        private void btnReset_Click_1(object sender, EventArgs e)
        {
            this.filter = false;
            gridViewFoodItem.ActiveFilterString = null;
            gridViewFoodItem.ClearSorting();
            gridViewFoodItem.ApplyFindFilter(string.Empty);
            textPeriodeDate.EditValue = "";
            startDate.Text = DateTime.Now.ToString();
            endDate.Text = DateTime.Now.ToString();

            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\Wrong.wav");
                simpleSound.Play();
            }
        }

        private void startDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (endDate.EditValue != null & this.filter)
                gridViewFoodItem.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }

        private void endDate_EditValueChanged_1(object sender, EventArgs e)
        {
            if (startDate.EditValue != null & this.filter)
                gridViewFoodItem.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }

        private void Form_Food_Items_List_Load(object sender, EventArgs e)
        {

        }
    }
}