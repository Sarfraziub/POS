using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Restaurant.Branch
{
    public partial class Form_Edit_Branch : DevExpress.XtraEditors.XtraForm
    {
        BL.Branch.Branch branch = new BL.Branch.Branch();
        Form_Branch_List form_branch_list = null;
        int branch_id = 0;
        string active = "Inactive";

        public Form_Edit_Branch()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceBranch.FillAsync();
        }

        public void loadData()
        {
            DataTable tb = branch.get_branch(this.branch_id);
            if (tb.Rows.Count > 0)
            {
                txtName.Text = tb.Rows[0]["name"].ToString();
                txtDeleveryFree.Text = tb.Rows[0]["delivery_free"].ToString();
                txtAdress.Text = tb.Rows[0]["address"].ToString();
                textPhone.Text = tb.Rows[0]["phn_no"].ToString();
                this.active = tb.Rows[0]["active"].ToString();
                checkEditActive.Checked = tb.Rows[0]["active"].ToString() == "Active" ? true : false ;
            }
        }

        public void setObject(Form_Branch_List form_branch_list)
        {
            this.form_branch_list = form_branch_list;
        }

        public void setID(int branch_id)
        {
            this.branch_id = branch_id;
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            if (dxValidationProvider1.Validate())
            {
                branch.update_branch(this.branch_id, txtName.Text, txtDeleveryFree.Text, txtName.Text, txtAdress.Text, textPhone.Text, "SaaS Banner", "Saas Thumb", this.active, DateTime.Now);
                txtName.Select();
                sqlDataSourceBranch.FillAsync();

                if (this.form_branch_list != null)
                    this.form_branch_list.asyncData();

                if (Properties.Settings.Default.sound == "yes")
                {
                    SoundPlayer simpleSound = new SoundPlayer(@"c:\Added.wav");
                    simpleSound.Play();
                }
            }
            else
            {
                if (Properties.Settings.Default.sound == "yes")
                {
                    SoundPlayer simpleSound = new SoundPlayer(@"c:\ValidationError.wav");
                    simpleSound.Play();
                }
            }
        }

        private void Form_Edit_Branch_Load(object sender, EventArgs e)
        {
            loadData();
        }

        private void checkEditActive_CheckedChanged(object sender, EventArgs e)
        {
            this.active = "Inactive";
            if (checkEditActive.Checked)
                this.active = "Active";
        }
    }
}