using DevExpress.Data;
using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Media;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ezziresto.PL.Restaurant.DepartmentTagList
{
    public partial class Form_Department_Tag_List : DevExpress.XtraEditors.XtraForm
    {
        BL.DepartmentTagList.DepartmentTagList departmentTagList = new BL.DepartmentTagList.DepartmentTagList();
        int department_tag_list_id = 0;
        bool filter = true;

        public Form_Department_Tag_List()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Fill the SqlDataSource asynchronously
            sqlDataSourceDepartmentTagList.FillAsync();
        }

        public void asyncData()
        {
            sqlDataSourceDepartmentTagList.FillAsync();
        }

        private void btnAdd_Click(object sender, EventArgs e)
        {
            Form_Add_Department_Tag add_department_tag = new Form_Add_Department_Tag();
            add_department_tag.setObject(this);
            add_department_tag.ShowDialog();
        }

        private void gridViewDepartmentTagList_RowClick(object sender, DevExpress.XtraGrid.Views.Grid.RowClickEventArgs e)
        {
            object value = this.gridViewDepartmentTagList.GetRowCellValue(this.gridViewDepartmentTagList.FocusedRowHandle, "id");
            this.department_tag_list_id = Convert.ToInt32(value);
            btnEdit.Enabled = true;
            btnDelete.Enabled = true;
        }

        private void gridControlDepartmentTagList_DoubleClick(object sender, EventArgs e)
        {
            object value = this.gridViewDepartmentTagList.GetRowCellValue(this.gridViewDepartmentTagList.FocusedRowHandle, "id");
            Form_Edit_Department_Tag edit_department_tag = new Form_Edit_Department_Tag();
            edit_department_tag.setID(Convert.ToInt32(value));
            edit_department_tag.setObject(this);
            edit_department_tag.ShowDialog();
        }

        private void btnEdit_Click(object sender, EventArgs e)
        {
            if (this.department_tag_list_id != 0)
            {
                Form_Edit_Department_Tag edit_department_tag = new Form_Edit_Department_Tag();
                edit_department_tag.setID(this.department_tag_list_id);
                edit_department_tag.setObject(this);
                edit_department_tag.ShowDialog();
            }
        }

        private void Form_Department_Tag_List_Load(object sender, EventArgs e)
        {
            btnEdit.Enabled = false;
            btnDelete.Enabled = false;
        }

        private void btnDelete_Click(object sender, EventArgs e)
        {
            if (this.department_tag_list_id != 0)
            {
                DialogResult dialogResult = MessageBox.Show("Are You Sure,You Whant Delete This Item ?", "Delete This Item", MessageBoxButtons.YesNo);
                if (dialogResult == DialogResult.Yes)
                {
                    departmentTagList.delete(this.department_tag_list_id);
                    this.asyncData();
                    btnEdit.Enabled = false;
                    btnDelete.Enabled = false;
                    if (Properties.Settings.Default.sound == "yes")
                    {
                        SoundPlayer simpleSound = new SoundPlayer(@"c:\Deleted.wav");
                        simpleSound.Play();
                    }
                }
                else if (dialogResult == DialogResult.No)
                {
                    // do something
                }
            }
        }

        private void textPeriodeDate_EditValueChanged(object sender, EventArgs e)
        {
            if (textPeriodeDate.EditValue.ToString() == "All")
            {
                gridViewDepartmentTagList.ActiveFilterString = null;
            }
            else if (textPeriodeDate.EditValue.ToString() == "To Day")
            {
                gridViewDepartmentTagList.ActiveFilterString = string.Format("IsOutlookIntervalToday([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "This Week")
            {
                gridViewDepartmentTagList.ActiveFilterString = string.Format("IsThisWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Last Week")
            {
                gridViewDepartmentTagList.ActiveFilterString = string.Format("IsOutlookIntervalLastWeek([created_at])");
            }
            else if (textPeriodeDate.EditValue.ToString() == "Newest")
            {
                gridViewDepartmentTagList.Columns["id"].SortOrder = ColumnSortOrder.Ascending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Oldest")
            {
                gridViewDepartmentTagList.Columns["id"].SortOrder = ColumnSortOrder.Descending;
            }
            else if (textPeriodeDate.EditValue.ToString() == "Between the dates")
            {
                startDate.Enabled = true;
                endDate.Enabled = true;
                gridViewDepartmentTagList.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
            }
        }

        private void btnReset_Click(object sender, EventArgs e)
        {
            this.filter = false;
            gridViewDepartmentTagList.ClearSorting();
            gridViewDepartmentTagList.ApplyFindFilter(string.Empty);
            textPeriodeDate.EditValue = "";
            startDate.Text = DateTime.Now.ToString();
            endDate.Text = DateTime.Now.ToString();
            if (Properties.Settings.Default.sound == "yes")
            {
                SoundPlayer simpleSound = new SoundPlayer(@"c:\Wrong.wav");
                simpleSound.Play();
            }
        }

        private void startDate_EditValueChanged(object sender, EventArgs e)
        {
            if (endDate.EditValue != null & this.filter)
                gridViewDepartmentTagList.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }

        private void endDate_EditValueChanged(object sender, EventArgs e)
        {
            if (startDate.EditValue != null & this.filter)
                gridViewDepartmentTagList.ActiveFilterString = string.Format("[created_at] Between(#" + startDate.DateTime + "#, #" + endDate.DateTime + "#)");
        }
    }
}